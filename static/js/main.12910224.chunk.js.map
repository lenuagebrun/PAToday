{"version":3,"sources":["components/Header/Header.module.css","components/Header/Header.jsx","components/AccordionTemplate/Arrow.jsx","components/AccordionTemplate/Accordion.jsx","components/Accordions/Accordions.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","styles","href","target","iconlink","src","Arrow","height","width","xmlns","viewBox","fill","d","Accordion","useState","setActive","setActiveState","setHeight","setHeightState","setRotate","setRotateState","content","useRef","onClick","current","scrollHeight","title","ref","style","maxHeight","backgroundColor","background","backgroundImage","image","color","textcolor","dangerouslySetInnerHTML","__html","Accordions","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,SAAW,2B,oMCqBdC,MAnBf,SAAgBC,GACd,OACE,yBAAKC,UAAWC,IAAOH,QACrB,gCACE,6BACE,yCACA,uEAEF,6BACE,uBAAGI,KAAK,iCAAiCC,OAAO,UAC9C,yBAAKH,UAAWC,IAAOG,SAAUC,IAAI,8HACvC,uBAAGH,KAAK,iEAAiEC,OAAO,UAC9E,yBAAKH,UAAWC,IAAOG,SAAUC,IAAI,iH,aCFlCC,MAXf,SAAeP,GACb,OACE,yBACAC,UAAWD,EAAMC,UACjBO,OAAQR,EAAMQ,OACdC,MAAOT,EAAMS,MACbC,MAAM,6BACNC,QAAQ,eAAc,0BAAMC,KAAMZ,EAAMY,KAAKC,EAAE,oMC0BpCC,MA/Bf,SAAmBd,GAAQ,IAAD,EAEYe,mBAAS,IAFrB,mBAEjBC,EAFiB,KAENC,EAFM,OAGYF,mBAAS,OAHrB,mBAGjBG,EAHiB,KAGNC,EAHM,OAIYJ,mBAAS,mBAJrB,mBAIjBK,EAJiB,KAINC,EAJM,KAKlBC,EAAUC,iBAAO,MAQvB,OACE,yBAAKtB,UAAU,sBACb,4BAAQA,UAAS,oBAAee,GAAaQ,QARjD,WACEP,EAA6B,KAAdD,EAAmB,SAAW,IAC7CG,EAA6B,WAAdH,EAAyB,MAAzB,UAAoCM,EAAQG,QAAQC,aAApD,OACfL,EAA4B,WAAbL,EAAwB,kBAAoB,4BAMvD,uBAAGf,UAAU,oBAAoBD,EAAM2B,OACvC,kBAAC,EAAD,CAAO1B,UAAS,UAAKmB,GAAaX,MAAO,GAAIG,KAAM,UAErD,yBAAKgB,IAAKN,EAASO,MAAO,CAACC,UAAU,GAAD,OAAKZ,GAAaa,gBAAgB,GAAD,OAAK/B,EAAMgC,YAAcC,gBAAgB,GAAD,OAAKjC,EAAMiC,kBAAmBhC,UAAU,sBACnJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,mBAAmBK,IAAKN,EAAMkC,SAE/C,yBAAKjC,UAAU,kBACf4B,MAAO,CAACM,MAAM,GAAD,OAAKnC,EAAMoC,YACxBC,wBAAyB,CAAEC,OAAQtC,EAAMsB,cC2BlCiB,MArDf,WACE,OACE,6BACE,kBAAC,EAAD,CACEZ,MAAM,eACNO,MAAM,kCACNZ,QAAQ,wkBACRU,WAAY,uBAEd,kBAAC,EAAD,CACEL,MAAM,eACNO,MAAM,kCACNZ,QAAQ,qTAGRU,WAAW,YAEb,kBAAC,EAAD,CACEL,MAAM,qBACNO,MAAM,gDACNZ,QAAQ,8WAIV,kBAAC,EAAD,CACEK,MAAM,QACNO,MAAM,kCACNZ,QAAQ,oeAIRU,WAAY,mBACZI,UAAU,UAEZ,kBAAC,EAAD,CACET,MAAM,UACNO,MAAM,kCACNZ,QAAQ,idAIRU,WAAY,qBACZI,UAAU,UAEZ,kBAAC,EAAD,CACET,MAAM,cACNO,MAAM,geACNZ,QAAQ,kJCpCDkB,MATf,WACE,OACE,yBAAKvC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGcwC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.12910224.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconlink\":\"Header_iconlink__3W42n\"};","import React from 'react';\r\nimport styles from './Header.module.css';\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <div className={styles.Header}>\r\n      <header>\r\n        <div>\r\n          <h1>P-A TODAY</h1>\r\n          <h6>Come take a gander at Pierre-Alexandre</h6>\r\n        </div>\r\n        <nav>\r\n          <a href='https://github.com/lenuagebrun' target='_blank'>\r\n            <img className={styles.iconlink} src='https://icons-for-free.com/iconfiles/png/512/code+collaboration+github+network+round+social+icon-1320086084536018107.png' /></a>\r\n          <a href='https://www.linkedin.com/in/pierre-alexandre-julien-0308591b8/' target='_blank'>\r\n            <img className={styles.iconlink} src='https://upload.wikimedia.org/wikipedia/commons/thumb/e/e9/Linkedin_icon.svg/768px-Linkedin_icon.svg.png' /></a>\r\n        </nav>\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Arrow(props) {\r\n  return (\r\n    <svg \r\n    className={props.className}\r\n    height={props.height}\r\n    width={props.width}\r\n    xmlns=\"http://www.w3.org/2000/svg\" \r\n    viewBox=\"0 0 256 512\"><path fill={props.fill}d=\"M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z\"></path></svg>\r\n  )\r\n}\r\n\r\nexport default Arrow;","import React, { useState, useRef } from 'react';\r\nimport styles from './Accordion.css';\r\nimport Arrow from './Arrow';\r\n\r\nfunction Accordion(props) {\r\n\r\n  const [setActive, setActiveState] = useState('');\r\n  const [setHeight, setHeightState] = useState('0px');\r\n  const [setRotate, setRotateState] = useState('accordion__icon');\r\n  const content = useRef(null);\r\n\r\n  function toggleAccordion() {\r\n    setActiveState(setActive === '' ? 'active' : '');\r\n    setHeightState(setActive === 'active' ? '0px' : `${content.current.scrollHeight}px`);\r\n    setRotateState(setActive ==='active' ? 'accordion__icon' : 'accordion__icon rotate')\r\n  }\r\n\r\n  return (\r\n    <div className='accordion__section'>\r\n      <button className={`accordion ${setActive}`} onClick={toggleAccordion}>\r\n        <p className='accordion__title'>{props.title}</p>\r\n        <Arrow className={`${setRotate}`} width={10} fill={'#777'} />\r\n      </button>\r\n      <div ref={content} style={{maxHeight: `${setHeight}`, backgroundColor: `${props.background}`, backgroundImage: `${props.backgroundImage}`}}className='accordion__content'>\r\n        <div className='accordion__image'>\r\n          <img className='accordion__image' src={props.image} />\r\n        </div>\r\n        <div className='accordion__text'\r\n        style={{color: `${props.textcolor}`}}\r\n        dangerouslySetInnerHTML={{ __html: props.content }} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Accordion;","import React from \"react\";\r\nimport Accordion from \"../AccordionTemplate/Accordion\";\r\n\r\nfunction Accordions() {\r\n  return (\r\n    <div>\r\n      <Accordion\r\n        title=\"Story of P-A\"\r\n        image=\"https://i.imgur.com/btSGJZU.png\"\r\n        content=\"Hello! My name is Pierre-Alexandre. I am French-Canadian and I'm just starting out in the world of coding.<br />Started as a salesman while studying in mechanical engineering, I always thought computers were my comfort zone and I really enjoyed coding as soon as I tried it out.<br />After falling in love with the art of programming, I decided to apply for a coding bootcamp at General Assembly where I gratuated with more than satisfying grades.<br />I am now in search of a job in the field.<br />You will be able to see some of the projects I've done (and still work on) below.\"\r\n        background= 'rgb(226, 173, 255)'\r\n      />\r\n      <Accordion\r\n        title=\"Hangman Game\"\r\n        image=\"https://i.imgur.com/eAVjTDX.png\"\r\n        content=\"The very first coding project I did. A simple game of hangman that helped me get a grasp on functions, DOM elements and just coding in general. <br /><br />\r\n        <a href='https://hangman-game.lenuagebrun.repl.co/' target='_blank'>Try it yourself!</a><br /><br />\r\n        Language used: Javascript, HTML, CSS TESTING\"\r\n        background=\"#ff9176\"\r\n      />\r\n      <Accordion\r\n        title=\"The Hedron Archive\"\r\n        image=\"https://deckmaster.info/images/sets/OGW_C.png\"\r\n        content=\"This project is my first functioning website made with Node, Express and MongoDB. This is the first time I had to work with an API (great API by the way) and my favourite project so far.<br /><br />\r\n        <a href='https://thehedronarchive.herokuapp.com/' target='_blank'>Check it out</a><br /><br />\r\n        Languages used: Javascript, Express, Node.js, MongoDB, HTML CSS\"\r\n      />\r\n      <Accordion\r\n        title=\"GA.fm\"\r\n        image=\"https://i.imgur.com/eK74Vzb.png\"\r\n        content=\"My first group project was a music album rating website.<br />I was in charge of designing, building the album pages, API as well as taking care of the back-end with the reviews and the collections of each user.<br />The rest such as: main page design, collection page design and authentication were my teammates' contributions.<br /><br />\r\n        <a href='https://gafm.herokuapp.com/'\r\n        target='_blank'>Check it out</a><br/ ><br />\r\n        Languages used:Python, Django, PostreSQL, HTML, CSS\"\r\n        background= 'rgb(236, 27, 35)'\r\n        textcolor='white'\r\n      />\r\n      <Accordion\r\n        title=\"Eventer\"\r\n        image=\"https://i.imgur.com/7gblHy3.png\"\r\n        content=\"Second group project made with React. This one was a bit ambitious, but I love it still.<br />This was our final course project and we decided to go with a social event platform.<br /> I was in charge of design, API and all of the front-end.<br />I had a great time working with React.<br/ ><br/ >\r\n        <a href='http://eventer-2020.herokuapp.com/'\r\n        target='_blank'>Check it out</a><br /><br />\r\n        Languages used: React, Node.js, Express, MongoDB/Mongoose, HTML, CSS\"\r\n        background= 'rgb(153, 224, 217)'\r\n        textcolor='white'\r\n      />\r\n      <Accordion\r\n        title=\"Coming Soon\"\r\n        image=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/b47ae333-6120-4f76-a614-ffad39b897ee/dbciwf4-c68941de-7a4b-47f7-94d7-1a93bae30392.gif?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3sicGF0aCI6IlwvZlwvYjQ3YWUzMzMtNjEyMC00Zjc2LWE2MTQtZmZhZDM5Yjg5N2VlXC9kYmNpd2Y0LWM2ODk0MWRlLTdhNGItNDdmNy05NGQ3LTFhOTNiYWUzMDM5Mi5naWYifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6ZmlsZS5kb3dubG9hZCJdfQ.v7_BdRJHrfo4F_pGQ2pzGPdw2BdBeVBy6JhpiVT2RO0\"\r\n        content=\"I am currently working on a project with a small team of programmers and UXDI people.<br /> Very excited to put it on here when it is done.\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Accordions;\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Accordions from './components/Accordions/Accordions';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Accordions/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}